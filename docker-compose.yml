services:
  # Servicio de desarrollo
  dev:
    build:
      context: .
      target: builder
    command: npm run dev -- -p 3001
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/agendia
    networks:
      - agendia-network
    depends_on:
      - postgres

  # Servicio de producci√≥n
  prod:
    build:
      context: .
      target: runner
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/agendia
    networks:
      - agendia-network
    depends_on:
      - postgres

  # Servicio de Prisma Studio
  prisma-studio:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npx prisma studio --port 5555"
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/agendia
    networks:
      - agendia-network
    depends_on:
      - postgres

  # Servicio de base de datos
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=agendia
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agendia-network

networks:
  agendia-network:
    driver: bridge

volumes:
  postgres_data: 
name: Build and Deploy Docker Image

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create .env file
      run: |
        cat > .env << EOF
        # Variables de base de datos
        POSTGRES_USER=${{ secrets.POSTGRES_USER || 'postgres' }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD || 'postgres' }}
        POSTGRES_DB=${{ secrets.POSTGRES_DB || 'agendia' }}
        
        # Variables de aplicaciÃ³n
        NODE_ENV=production
        PORT=3001
        DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER || 'postgres' }}:${{ secrets.POSTGRES_PASSWORD || 'postgres' }}@postgres:5432/${{ secrets.POSTGRES_DB || 'agendia' }}
        
        # Variables de GitHub
        GITHUB_REPOSITORY=${{ github.repository }}
        
        # Variables de seguridad
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
        
        # Variables opcionales de deployment
        FORCE_SEED=${{ secrets.FORCE_SEED || 'false' }}
        EOF

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # Para releases con tags semÃ¡nticos
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          # Para pushes a main/master
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          # Tag latest para main/master
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        target: runner
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate deployment summary
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
        echo "**SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY 